{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\CascadeProjects\\\\SS-Stores\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\n/**\n * Authentication Context for SS-Stores\n * Manages global authentication state using React Context API\n */\n\n// Initial authentication state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  loading: true,\n  error: null\n};\n\n// Authentication action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  REGISTER_START: 'REGISTER_START',\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\n  LOGOUT: 'LOGOUT',\n  LOAD_USER: 'LOAD_USER',\n  UPDATE_USER: 'UPDATE_USER',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  SET_LOADING: 'SET_LOADING'\n};\n\n// Authentication reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.REGISTER_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.REGISTER_FAILURE:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOAD_USER:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        },\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Create Auth Context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth Provider Component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Configure axios defaults\n  useEffect(() => {\n    const token = localStorage.getItem('ss-stores-token');\n    if (token) {\n      setAuthToken(token);\n      loadUser();\n    } else {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  }, []);\n\n  // Set auth token in axios headers and localStorage\n  const setAuthToken = token => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      localStorage.setItem('ss-stores-token', token);\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      localStorage.removeItem('ss-stores-token');\n    }\n  };\n\n  // Load user from token\n  const loadUser = async () => {\n    try {\n      const response = await axios.get('/api/auth/me');\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER,\n        payload: response.data.user\n      });\n    } catch (error) {\n      console.error('Load user error:', error);\n      logout();\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_START\n    });\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Set token in axios headers and localStorage\n      setAuthToken(token);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Register user\n  const register = async userData => {\n    dispatch({\n      type: AUTH_ACTIONS.REGISTER_START\n    });\n    try {\n      const response = await axios.post('/api/auth/register', userData);\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Set token in axios headers and localStorage\n      setAuthToken(token);\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_FAILURE,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Logout user\n  const logout = async () => {\n    try {\n      await axios.post('/api/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n\n    // Clear token and reset state\n    setAuthToken(null);\n    dispatch({\n      type: AUTH_ACTIONS.LOGOUT\n    });\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    dispatch({\n      type: AUTH_ACTIONS.SET_LOADING,\n      payload: true\n    });\n    try {\n      const response = await axios.put('/api/auth/updatedetails', userData);\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_USER,\n        payload: response.data.user\n      });\n      return {\n        success: true,\n        user: response.data.user\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Update failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Update password\n  const updatePassword = async (currentPassword, newPassword) => {\n    dispatch({\n      type: AUTH_ACTIONS.SET_LOADING,\n      payload: true\n    });\n    try {\n      await axios.put('/api/auth/updatepassword', {\n        currentPassword,\n        newPassword\n      });\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Password update failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Clear error\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Context value\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile,\n    updatePassword,\n    clearError,\n    loadUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","jsxDEV","_jsxDEV","initialState","user","token","isAuthenticated","loading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_START","REGISTER_SUCCESS","REGISTER_FAILURE","LOGOUT","LOAD_USER","UPDATE_USER","CLEAR_ERROR","SET_LOADING","authReducer","state","action","type","payload","AuthContext","AuthProvider","children","_s","dispatch","localStorage","getItem","setAuthToken","loadUser","defaults","headers","common","setItem","removeItem","response","get","data","console","logout","login","email","password","post","success","_error$response","_error$response$data","errorMessage","message","register","userData","_error$response2","_error$response2$data","updateProfile","put","_error$response3","_error$response3$data","updatePassword","currentPassword","newPassword","_error$response4","_error$response4$data","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/dell/CascadeProjects/SS-Stores/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\n/**\n * Authentication Context for SS-Stores\n * Manages global authentication state using React Context API\n */\n\n// Initial authentication state\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  loading: true,\n  error: null\n};\n\n// Authentication action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  REGISTER_START: 'REGISTER_START',\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\n  LOGOUT: 'LOGOUT',\n  LOAD_USER: 'LOAD_USER',\n  UPDATE_USER: 'UPDATE_USER',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  SET_LOADING: 'SET_LOADING'\n};\n\n// Authentication reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.REGISTER_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.REGISTER_FAILURE:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload\n      };\n\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n\n    case AUTH_ACTIONS.LOAD_USER:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload },\n        loading: false,\n        error: null\n      };\n\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Create Auth Context\nconst AuthContext = createContext();\n\n// Auth Provider Component\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Configure axios defaults\n  useEffect(() => {\n    const token = localStorage.getItem('ss-stores-token');\n    if (token) {\n      setAuthToken(token);\n      loadUser();\n    } else {\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n    }\n  }, []);\n\n  // Set auth token in axios headers and localStorage\n  const setAuthToken = (token) => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      localStorage.setItem('ss-stores-token', token);\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      localStorage.removeItem('ss-stores-token');\n    }\n  };\n\n  // Load user from token\n  const loadUser = async () => {\n    try {\n      const response = await axios.get('/api/auth/me');\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER,\n        payload: response.data.user\n      });\n    } catch (error) {\n      console.error('Load user error:', error);\n      logout();\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n\n      const { token, user } = response.data;\n\n      // Set token in axios headers and localStorage\n      setAuthToken(token);\n\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: { user, token }\n      });\n\n      return { success: true, user };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Register user\n  const register = async (userData) => {\n    dispatch({ type: AUTH_ACTIONS.REGISTER_START });\n\n    try {\n      const response = await axios.post('/api/auth/register', userData);\n\n      const { token, user } = response.data;\n\n      // Set token in axios headers and localStorage\n      setAuthToken(token);\n\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\n        payload: { user, token }\n      });\n\n      return { success: true, user };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_FAILURE,\n        payload: errorMessage\n      });\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Logout user\n  const logout = async () => {\n    try {\n      await axios.post('/api/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n\n    // Clear token and reset state\n    setAuthToken(null);\n    dispatch({ type: AUTH_ACTIONS.LOGOUT });\n  };\n\n  // Update user profile\n  const updateProfile = async (userData) => {\n    dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\n\n    try {\n      const response = await axios.put('/api/auth/updatedetails', userData);\n\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_USER,\n        payload: response.data.user\n      });\n\n      return { success: true, user: response.data.user };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Update failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Update password\n  const updatePassword = async (currentPassword, newPassword) => {\n    dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\n\n    try {\n      await axios.put('/api/auth/updatepassword', {\n        currentPassword,\n        newPassword\n      });\n\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Password update failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Clear error\n  const clearError = () => {\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n  };\n\n  // Context value\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile,\n    updatePassword,\n    clearError,\n    loadUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}