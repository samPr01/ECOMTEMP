{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\CascadeProjects\\\\SS-Stores\\\\client\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_CART':\n      return {\n        ...state,\n        items: action.payload.items,\n        total: action.payload.total,\n        count: action.payload.count\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'ADD_ITEM':\n      return {\n        ...state,\n        count: state.count + 1\n      };\n    case 'CLEAR_CART':\n      return {\n        ...state,\n        items: [],\n        total: 0,\n        count: 0\n      };\n    default:\n      return state;\n  }\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, {\n    items: [],\n    total: 0,\n    count: 0,\n    loading: false,\n    sessionId: localStorage.getItem('cartSessionId') || uuidv4()\n  });\n  useEffect(() => {\n    // Save session ID to localStorage\n    localStorage.setItem('cartSessionId', state.sessionId);\n\n    // Load cart on mount\n    loadCart();\n  }, []);\n  const loadCart = async () => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await axios.get(`/api/cart/${state.sessionId}`);\n      dispatch({\n        type: 'SET_CART',\n        payload: response.data\n      });\n    } catch (error) {\n      console.error('Error loading cart:', error);\n    } finally {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  };\n  const addToCart = async (productId, quantity = 1, size = null) => {\n    try {\n      const response = await axios.post('/api/cart/add', {\n        sessionId: state.sessionId,\n        productId,\n        quantity,\n        size\n      });\n      dispatch({\n        type: 'ADD_ITEM'\n      });\n      toast.success('Product added to cart!');\n      await loadCart(); // Refresh cart\n\n      return response.data;\n    } catch (error) {\n      toast.error('Failed to add product to cart');\n      throw error;\n    }\n  };\n  const updateCartItem = async (itemId, quantity) => {\n    try {\n      await axios.put('/api/cart/update', {\n        sessionId: state.sessionId,\n        itemId,\n        quantity\n      });\n      await loadCart(); // Refresh cart\n      toast.success('Cart updated!');\n    } catch (error) {\n      toast.error('Failed to update cart');\n      throw error;\n    }\n  };\n  const removeFromCart = async itemId => {\n    try {\n      await axios.delete('/api/cart/remove', {\n        data: {\n          sessionId: state.sessionId,\n          itemId\n        }\n      });\n      await loadCart(); // Refresh cart\n      toast.success('Item removed from cart');\n    } catch (error) {\n      toast.error('Failed to remove item from cart');\n      throw error;\n    }\n  };\n  const clearCart = () => {\n    dispatch({\n      type: 'CLEAR_CART'\n    });\n  };\n  const value = {\n    ...state,\n    addToCart,\n    updateCartItem,\n    removeFromCart,\n    clearCart,\n    loadCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"xVSFvJMXUVXSN6dnWZrQUDDXlJI=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","v4","uuidv4","axios","toast","jsxDEV","_jsxDEV","CartContext","cartReducer","state","action","type","items","payload","total","count","loading","CartProvider","children","_s","dispatch","sessionId","localStorage","getItem","setItem","loadCart","response","get","data","error","console","addToCart","productId","quantity","size","post","success","updateCartItem","itemId","put","removeFromCart","delete","clearCart","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/dell/CascadeProjects/SS-Stores/client/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst CartContext = createContext();\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_CART':\n      return {\n        ...state,\n        items: action.payload.items,\n        total: action.payload.total,\n        count: action.payload.count\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'ADD_ITEM':\n      return {\n        ...state,\n        count: state.count + 1\n      };\n    case 'CLEAR_CART':\n      return {\n        ...state,\n        items: [],\n        total: 0,\n        count: 0\n      };\n    default:\n      return state;\n  }\n};\n\nexport const CartProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(cartReducer, {\n    items: [],\n    total: 0,\n    count: 0,\n    loading: false,\n    sessionId: localStorage.getItem('cartSessionId') || uuidv4()\n  });\n\n  useEffect(() => {\n    // Save session ID to localStorage\n    localStorage.setItem('cartSessionId', state.sessionId);\n    \n    // Load cart on mount\n    loadCart();\n  }, []);\n\n  const loadCart = async () => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      const response = await axios.get(`/api/cart/${state.sessionId}`);\n      dispatch({ type: 'SET_CART', payload: response.data });\n    } catch (error) {\n      console.error('Error loading cart:', error);\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  const addToCart = async (productId, quantity = 1, size = null) => {\n    try {\n      const response = await axios.post('/api/cart/add', {\n        sessionId: state.sessionId,\n        productId,\n        quantity,\n        size\n      });\n      \n      dispatch({ type: 'ADD_ITEM' });\n      toast.success('Product added to cart!');\n      await loadCart(); // Refresh cart\n      \n      return response.data;\n    } catch (error) {\n      toast.error('Failed to add product to cart');\n      throw error;\n    }\n  };\n\n  const updateCartItem = async (itemId, quantity) => {\n    try {\n      await axios.put('/api/cart/update', {\n        sessionId: state.sessionId,\n        itemId,\n        quantity\n      });\n      \n      await loadCart(); // Refresh cart\n      toast.success('Cart updated!');\n    } catch (error) {\n      toast.error('Failed to update cart');\n      throw error;\n    }\n  };\n\n  const removeFromCart = async (itemId) => {\n    try {\n      await axios.delete('/api/cart/remove', {\n        data: {\n          sessionId: state.sessionId,\n          itemId\n        }\n      });\n      \n      await loadCart(); // Refresh cart\n      toast.success('Item removed from cart');\n    } catch (error) {\n      toast.error('Failed to remove item from cart');\n      throw error;\n    }\n  };\n\n  const clearCart = () => {\n    dispatch({ type: 'CLEAR_CART' });\n  };\n\n  const value = {\n    ...state,\n    addToCart,\n    updateCartItem,\n    removeFromCart,\n    clearCart,\n    loadCart\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}